@model Domain.AvailableTeacherTime

@{
    ViewBag.Title = "EditAvailableTeacherTime";
    Layout = "~/Views/Shared/_AdminNewLayout.cshtml";
    //Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="container">
    <div class="header">
        <p class="category">Edit AvailableTeacherTime</p>
    </div>
    <div class="card">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.PKAvailableTeacherTimeId)
                @Html.HiddenFor(model => model.FKClassId)

                <div class="form-group">
                    @Html.LabelFor(model => model.Class.UserProfile.UserName, "User Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Class.UserProfile.UserName, null, htmlAttributes: new { @class = "form-control border-input", @readonly = "readonly" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Class.ClassName, "Class Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Class.ClassName, null, htmlAttributes: new { @class = "form-control border-input" })
                        @Html.ValidationMessageFor(model => model.FKClassId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FromAvailableDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FromAvailableDate, new { htmlAttributes = new { @class = "form-control Date border-input" } })
                        @Html.ValidationMessageFor(model => model.FromAvailableDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ToAvailableDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ToAvailableDate, new { htmlAttributes = new { @class = "form-control Date border-input" } })
                        @Html.ValidationMessageFor(model => model.ToAvailableDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FromAvailableTime, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FromAvailableTime, new { htmlAttributes = new { @class = "form-control Time border-input" } })
                        @Html.ValidationMessageFor(model => model.FromAvailableTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ToAvailableTime, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ToAvailableTime, new { htmlAttributes = new { @class = "form-control Time border-input" } })
                        @Html.ValidationMessageFor(model => model.ToAvailableTime, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsActive)
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-success" />
                        <a href="/Admin/AvailableTeacherTime"><input type="button" value="Cancel" class="btn btn-danger" /></a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>


@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
    <script src="//code.jquery.com/jquery-1.10.2.js"></script>
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('.Date').datepicker();
        });
    </script>
    <script src="~/scripts/jquery.datetimepicker.full.js"></script>
    <link href="~/Content/jquery.datetimepicker.min.css" rel="stylesheet" />
    <script>
        $(document).ready(function () {
            $('.Time').datetimepicker({
                datepicker: false,
                format: 'H:i'
            });

        });
    </script>
}
